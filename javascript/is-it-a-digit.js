String.prototype.digit = function() {
  return /^[0-9]$/.test(this);
};

//tests
describe('hex number', () => {
  it('Basic tests', () => {
    Test.assertEquals(''.digit(), false);
    Test.assertEquals('7'.digit(), true);
    Test.assertEquals(' '.digit(), false);
    Test.assertEquals('a'.digit(), false);
    Test.assertEquals('a5'.digit(), false);
    Test.assertEquals('14'.digit(), false);
  });
  
  it('More tests', () => {
    Test.assertEquals(false, ' '.digit());
    Test.assertEquals(false, '!'.digit());
    Test.assertEquals(false, '"'.digit());
    Test.assertEquals(false, '#'.digit());
    Test.assertEquals(false, '$'.digit());
    Test.assertEquals(false, '%'.digit());
    Test.assertEquals(false, '&'.digit());
    Test.assertEquals(false, '\''.digit());
    Test.assertEquals(false, '('.digit());
    Test.assertEquals(false, ')'.digit());
    Test.assertEquals(false, '*'.digit());
    Test.assertEquals(false, '+'.digit());
    Test.assertEquals(false, ','.digit());
    Test.assertEquals(false, '-'.digit());
    Test.assertEquals(false, '.'.digit());
    Test.assertEquals(false, '/'.digit());
    Test.assertEquals(true, '0'.digit());
    Test.assertEquals(true, '1'.digit());
    Test.assertEquals(true, '2'.digit());
    Test.assertEquals(true, '3'.digit());
    Test.assertEquals(true, '4'.digit());
    Test.assertEquals(true, '5'.digit());
    Test.assertEquals(true, '6'.digit());
    Test.assertEquals(true, '7'.digit());
    Test.assertEquals(true, '8'.digit());
    Test.assertEquals(true, '9'.digit());
    Test.assertEquals(false, ':'.digit());
    Test.assertEquals(false, ';'.digit());
    Test.assertEquals(false, '<'.digit());
    Test.assertEquals(false, '='.digit());
    Test.assertEquals(false, '>'.digit());
    Test.assertEquals(false, '?'.digit());
    Test.assertEquals(false, '@'.digit());
    Test.assertEquals(false, 'A'.digit());
    Test.assertEquals(false, 'B'.digit());
    Test.assertEquals(false, 'C'.digit());
    Test.assertEquals(false, 'D'.digit());
    Test.assertEquals(false, 'E'.digit());
    Test.assertEquals(false, 'F'.digit());
    Test.assertEquals(false, 'G'.digit());
    Test.assertEquals(false, 'H'.digit());
    Test.assertEquals(false, 'I'.digit());
    Test.assertEquals(false, 'J'.digit());
    Test.assertEquals(false, 'K'.digit());
    Test.assertEquals(false, 'L'.digit());
    Test.assertEquals(false, 'M'.digit());
    Test.assertEquals(false, 'N'.digit());
    Test.assertEquals(false, 'O'.digit());
    Test.assertEquals(false, 'P'.digit());
    Test.assertEquals(false, 'Q'.digit());
    Test.assertEquals(false, 'R'.digit());
    Test.assertEquals(false, 'S'.digit());
    Test.assertEquals(false, 'T'.digit());
    Test.assertEquals(false, 'U'.digit());
    Test.assertEquals(false, 'V'.digit());
    Test.assertEquals(false, 'W'.digit());
    Test.assertEquals(false, 'X'.digit());
    Test.assertEquals(false, 'Y'.digit());
    Test.assertEquals(false, 'Z'.digit());
    Test.assertEquals(false, '['.digit());
    Test.assertEquals(false, '\\'.digit());
    Test.assertEquals(false, ']'.digit());
    Test.assertEquals(false, '^'.digit());
    Test.assertEquals(false, '_'.digit());
    Test.assertEquals(false, '`'.digit());
    Test.assertEquals(false, 'a'.digit());
    Test.assertEquals(false, 'b'.digit());
    Test.assertEquals(false, 'c'.digit());
    Test.assertEquals(false, 'd'.digit());
    Test.assertEquals(false, 'e'.digit());
    Test.assertEquals(false, 'f'.digit());
    Test.assertEquals(false, 'g'.digit());
    Test.assertEquals(false, 'h'.digit());
    Test.assertEquals(false, 'i'.digit());
    Test.assertEquals(false, 'j'.digit());
    Test.assertEquals(false, 'k'.digit());
    Test.assertEquals(false, 'l'.digit());
    Test.assertEquals(false, 'm'.digit());
    Test.assertEquals(false, 'n'.digit());
    Test.assertEquals(false, 'o'.digit());
    Test.assertEquals(false, 'p'.digit());
    Test.assertEquals(false, 'q'.digit());
    Test.assertEquals(false, 'r'.digit());
    Test.assertEquals(false, 's'.digit());
    Test.assertEquals(false, 't'.digit());
    Test.assertEquals(false, 'u'.digit());
    Test.assertEquals(false, 'v'.digit());
    Test.assertEquals(false, 'w'.digit());
    Test.assertEquals(false, 'x'.digit());
    Test.assertEquals(false, 'y'.digit());
    Test.assertEquals(false, 'z'.digit());
    Test.assertEquals(false, '{'.digit());
    Test.assertEquals(false, '|'.digit());
    Test.assertEquals(false, '}'.digit());
    Test.assertEquals(false, '~'.digit());
    
    Test.assertEquals(false, '1\n0'.digit());
    Test.assertEquals(false, '1\n'.digit());
    Test.assertEquals(false, '1 '.digit());
    Test.assertEquals(false, ' 1'.digit());
  });
});